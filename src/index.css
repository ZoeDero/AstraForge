@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom styles for light and dark themes */

body {
  background-color: theme('colors.light.background');
  color: theme('colors.light.text');
}

.dark body {
  background-color: theme('colors.dark.background');
  color: theme('colors.dark.text');
}

/* Card Light Effect Animation */
.card-light-effect {
  position: relative;
  overflow: hidden;
  border-width: 1px;
  border-color: transparent;
  transition-property: all;
  transition-duration: 0.3s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transform-origin: center center;
  margin: 1rem;
}

.card-light-effect:hover {
  --tw-scale-x: 1.02;
  --tw-scale-y: 1.02;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.2), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
  transition-timing-function: cubic-bezier(0.34, 1.56, 0.64, 1);
  z-index: 10;
}

:is(.dark .card-light-effect:hover) {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.4), 0 2px 4px -2px rgba(0, 0, 0, 0.3);
  animation: border-appear 0.25s cubic-bezier(0.34, 1.56, 0.64, 1) 0.53s forwards;
}

@keyframes border-appear {
  from {
    border-color: transparent;
  }
  to {
    border-color: rgba(255, 255, 255, 0.1);
  }
}

/* Light Sweep Effect - Trait fin et distinct */
.card-light-effect::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    var(--sweep-angle, 135deg),
    transparent 0%,
    transparent calc(var(--mouse-distance, 50%) - 5%),
    rgba(255, 255, 255, 0.05) calc(var(--mouse-distance, 50%) - 3%),
    rgba(255, 255, 255, 0.3) var(--mouse-distance, 50%),
    rgba(255, 255, 255, 0.05) calc(var(--mouse-distance, 50%) + 3%),
    transparent calc(var(--mouse-distance, 50%) + 5%),
    transparent 100%
  );
  opacity: 0;
  z-index: 1;
  transition: opacity 0.3s ease;
  pointer-events: none;
  mix-blend-mode: overlay;
}

.card-light-effect:hover::before {
  opacity: 1;
}

/* Enhanced Light Sweep for Dark Mode */
:is(.dark .card-light-effect)::before {
  background: linear-gradient(
    var(--sweep-angle, 135deg),
    transparent 0%,
    transparent calc(var(--mouse-distance, 50%) - 5%),
    rgba(255, 255, 255, 0.03) calc(var(--mouse-distance, 50%) - 3%),
    rgba(255, 255, 255, 0.2) var(--mouse-distance, 50%),
    rgba(255, 255, 255, 0.03) calc(var(--mouse-distance, 50%) + 3%),
    transparent calc(var(--mouse-distance, 50%) + 5%),
    transparent 100%
  );
}

/* Suppression de l'effet radial qui n'est plus n√©cessaire */
.card-light-effect::after {
  display: none;
}

/* Apply the light-sweep effect to other card components */
.service-card, .project-card, .testimonial-card {
  position: relative;
  overflow: hidden;
}

.service-card::before, .project-card::before, .testimonial-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    var(--sweep-angle, 135deg),
    transparent 0%,
    transparent calc(var(--mouse-distance, 50%) - 5%),
    rgba(255, 255, 255, 0.05) calc(var(--mouse-distance, 50%) - 3%),
    rgba(255, 255, 255, 0.3) var(--mouse-distance, 50%),
    rgba(255, 255, 255, 0.05) calc(var(--mouse-distance, 50%) + 3%),
    transparent calc(var(--mouse-distance, 50%) + 5%),
    transparent 100%
  );
  opacity: 0;
  z-index: 1;
  transition: opacity 0.3s ease;
  pointer-events: none;
  mix-blend-mode: overlay;
}

.service-card:hover::before, .project-card:hover::before, .testimonial-card:hover::before {
  opacity: 1;
}

/* 3D Tilt Effect */
.tilt-card {
  transform-style: preserve-3d;
  transition: transform 0.1s ease-out;
  will-change: transform;
  transform: perspective(1000px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1);
}

.tilt-card .tilt-card-content {
  transform-style: preserve-3d;
  transition: transform 0.1s ease-out;
}

.tilt-card .tilt-card-shine {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  background: radial-gradient(
    circle at var(--mouse-x, 50%) var(--mouse-y, 50%), 
    rgba(255, 255, 255, 0.15) 0%, 
    rgba(255, 255, 255, 0) 80%
  );
  opacity: 0;
  transition: opacity 0.3s;
  z-index: 2;
  pointer-events: none;
}

.tilt-card:hover .tilt-card-shine {
  opacity: 1;
}

/* Elements that should have depth when parent is tilted */
.tilt-depth {
  transform: translateZ(20px);
  transition: transform 0.1s ease-out;
}

.tilt-card:hover .tilt-depth {
  transform: translateZ(40px);
}

/* Subtle depth for text */
.tilt-card h3, 
.tilt-card h2, 
.tilt-card .tilt-card-title {
  transform: translateZ(10px);
  transition: transform 0.1s ease-out;
}

.tilt-card p, 
.tilt-card .tilt-card-description {
  transform: translateZ(5px);
  transition: transform 0.1s ease-out;
}

.tilt-card .tilt-card-button {
  transform: translateZ(15px);
  transition: transform 0.1s ease-out;
}

.tilt-card:hover .tilt-card-button {
  transform: translateZ(30px);
}

/* For cards that should have both effects */
.card-light-effect.tilt-card::before {
  z-index: 3;
}

/* Star Citizen style light sweep effect for buttons and cards */
.star-citizen-sweep {
  position: relative;
  overflow: hidden;
}

/* Background color change on hover */
.star-citizen-sweep::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(60, 60, 100, 0.2);
  opacity: 0;
  transition: opacity 0.2s ease;
  z-index: 1;
}

/* First light sweep effect */
.star-citizen-sweep::after {
  content: '';
  position: absolute;
  top: -100%;
  left: -100%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    135deg,
    rgba(0, 0, 0, 0) 60%,
    rgba(255, 255, 255, 0.05) 60.5%,
    rgba(255, 255, 255, 0.05) 100%
  );
  pointer-events: none;
  opacity: 0;
  z-index: 2;
  transform: translateX(0) translateY(0);
  transition: all 0s;
}

/* Second light sweep effect */
.star-citizen-sweep .second-sweep {
  position: absolute;
  top: -100%;
  left: -100%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    135deg,
    rgba(0, 0, 0, 0) 60%,
    rgba(255, 255, 255, 0.05) 60.5%,
    rgba(255, 255, 255, 0.05) 100%
  );
  pointer-events: none;
  opacity: 0;
  z-index: 2;
  transform: translateX(0) translateY(0);
  transition: all 0s;
}

/* Orange triangle indicator */
.star-citizen-sweep .orange-indicator {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 15px;
  height: 15px;
  background-color: #FF6B00;
  clip-path: polygon(0 0, 100% 100%, 0 100%);
  opacity: 0;
  z-index: 3;
  transition: opacity 0s;
}

/* Hover animations */
.star-citizen-sweep:hover::before {
  opacity: 1;
}

.star-citizen-sweep:hover::after {
  opacity: 1;
  animation: first-sweep 1.2s forwards;
}

.star-citizen-sweep:hover .second-sweep {
  opacity: 1;
  animation: second-sweep 1.2s forwards 0.2s;
}

.star-citizen-sweep:hover .orange-indicator {
  opacity: 1;
  transition: opacity 0.2s ease 0.8s;
}

/* Animation keyframes */
@keyframes first-sweep {
  0% {
    transform: translateX(-50%) translateY(-50%);
  }
  60% {
    transform: translateX(25%) translateY(25%);
  }
  100% {
    transform: translateX(50%) translateY(50%);
  }
}

@keyframes second-sweep {
  0% {
    transform: translateX(-50%) translateY(-50%);
  }
  60% {
    transform: translateX(25%) translateY(25%);
  }
  100% {
    transform: translateX(50%) translateY(50%);
  }
}

/* Specific version for process cards */
.process-card.star-citizen-sweep::after,
.process-card.star-citizen-sweep .second-sweep {
  background: linear-gradient(
    135deg,
    rgba(0, 0, 0, 0) 60%,
    rgba(255, 255, 255, 0.05) 60.5%,
    rgba(255, 255, 255, 0.05) 100%
  );
}

.tilt-card .tilt-card-button {
  transform: translateZ(15px);
  transition: transform 0.1s ease-out;
}
